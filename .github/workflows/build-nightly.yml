name: Build Citron Nightly
concurrency:
  group: build-nightly-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches: [ "main" ]
  workflow_dispatch: {}

jobs:
  citron_build: 
    runs-on: ${{ matrix.runs-on }}
    strategy:
      matrix:
        include:
          - runs-on: ubuntu-latest
            name: "Citron Nightly"
            target: steamdeck
          - runs-on: ubuntu-latest
            name: "Citron Nightly"
            target: rog
          - runs-on: ubuntu-latest
            name: "Citron Nightly"
            target: common
    container: ghcr.io/pkgforge-dev/archlinux:latest
    name: "${{ matrix.name }} (${{ matrix.target }})"
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Install dependencies
        if: always()
        run: chmod +x ./get-dependencies.sh && ./get-dependencies.sh

      - name: Compile Citron Steamdeck
        if: ${{ matrix.target == steamdeck }}
        run: |
          chmod +x ./citron-appimage.sh
          ./citron-appimage.sh steamdeck
          mkdir -p dist
          mv *.AppImage* dist/
          
      - name: Compile Citron ROG
        if: ${{ matrix.target == rog }}
        run: |
          chmod +x ./citron-appimage.sh
          ./citron-appimage.sh rog
          mkdir -p dist
          mv *.AppImage* dist/

      - name: Compile Citron Common
        if: ${{ matrix.target == common }}
        run: |
          chmod +x ./citron-appimage.sh
          ./citron-appimage.sh common
          mkdir -p dist
          mv *.AppImage* dist/

      - name: Upload artifact
        uses: actions/upload-artifact@v4.6.1
        with:
          name: citron-${{ matrix.target}}-appimage
          path: "dist"

      - name: Check hash file
        run: |
          cat ~/hash
          echo "APP_VERSION=$(cat ~/version)" >> "${GITHUB_ENV}"

      - name: Upload hash file
        uses: actions/upload-artifact@v4.6.1
        with:
          name: hash
          path: ~/hash
          overwrite: true

  release:
    name: "release"
    #if: ${{ github.ref_name == 'main' }}
    needs: [citron_build]
    permissions:
      actions: read
      security-events: write
      contents: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4.1.9
        with:
          name: citron-steamdeck-appimage

      - uses: actions/download-artifact@v4.1.9
        with:
          name: citron-rog-appimage

      - uses: actions/download-artifact@v4.1.9
        with:
          name: citron-common-appimage
          
      - uses: actions/download-artifact@v4.1.9
        with:
          name: hash
          
      - name: Read hash and Get date
        run: |
          export VERSION="$(cat hash)"
          echo "APP_VERSION=${VERSION}" >> "${GITHUB_ENV}"
          echo "date=$(date +'%Y-%m-%d')" >> "$GITHUB_ENV"

      - name: Delete same tag release
        run: |
          gh release delete "${{ env.APP_VERSION }}-${{ env.date }}" --repo "${GITHUB_REPOSITORY}" --cleanup-tag  -y
          sleep 5
        env:
          GH_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        continue-on-error: true

      - name: Build Releaser
        uses: softprops/action-gh-release@v2
        with:
          name: "Citron Nightly Appimage: ${{ env.APP_VERSION }}"
          tag_name: "${{ env.APP_VERSION }}-${{ env.date }}"
          prerelease: false
          draft: false
          generate_release_notes: false
          make_latest: true
          files: |
            *.AppImage*
