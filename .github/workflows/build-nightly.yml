name: Build Citron (Nightly)
concurrency:
  group: build-nightly-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches: [ "steamdeck-optimized-master" ]
  workflow_dispatch: {}

jobs:
  build:
    name: "${{ matrix.name }} (${{ matrix.arch }})"
    runs-on: ${{ matrix.runs-on }}
    strategy:
      matrix:
        include:
          - runs-on: ubuntu-latest
            optimized: true
            name: "Citron Build (Optimized)"
            arch: x86_64
    container: ghcr.io/pkgforge-dev/archlinux:latest
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Install dependencies
        if: always()
        run: chmod +x ./get-dependencies.sh && ./get-dependencies.sh

      - name: Compile Citron (Optimized)
        if: ${{ matrix.optimized == true }}
        run: |
          rm -rf ./AppDir || true
          sudo pacman -R --noconfirm citron || true
          chmod +x ./citron-appimage.sh && DEVEL=true ./citron-appimage.sh v3
          mkdir -p dist
          mv *.AppImage* dist/

      - name: Upload artifact
        uses: actions/upload-artifact@v4.6.1
        with:
          name: citron-${{ matrix.optimized && 'optimized' || 'normal' }}-appimage-${{ matrix.arch }}
          path: "dist"

      - name: Check hash file
        if: ${{ matrix.optimized == false }}
        run: |
          cat ~/hash
          echo "APP_VERSION=$(cat ~/hash)" >> "${GITHUB_ENV}"

      - name: Upload hash file
        uses: actions/upload-artifact@v4.6.1
        with:
          name: hash
          path: ~/hash
          overwrite: true

  release:
    name: "release"
    if: ${{ github.ref_name == 'main' }}
    needs: [build]
    permissions:
      actions: read
      security-events: write
      contents: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4.1.9
        with:
          name: citron-optimized-appimage-x86_64
          
      - uses: actions/download-artifact@v4.1.9
        with:
          name: hash
          
      - name: Read hash
        run: |
          export VERSION="$(cat hash)"
          echo "APP_VERSION=${VERSION}" >> "${GITHUB_ENV}"

      - name: Nightly Releaser
        uses: softprops/action-gh-release@v2
        with:
          name: "Citron Appimage Nightly for Steamdeck: ${{ env.APP_VERSION }}"
          tag_name: "${{ env.APP_VERSION }}"
          prerelease: false
          draft: false
          generate_release_notes: false
          make_latest: true
          files: |
            *.AppImage*
