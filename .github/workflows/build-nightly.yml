name: Build Citron Nightly
concurrency:
  group: build-nightly-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches: [ "main" ]
  workflow_dispatch: {}

jobs:
  appimage: 
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [steamdeck, rog, common, check]
    container: ghcr.io/pkgforge-dev/archlinux:latest
    name: "Citron nightly (${{ matrix.target }})"
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
          
      - name: Cache vcpkg dependencies
        uses: actions/cache@v4
        with:
          path: /github/home/.cache/vcpkg/archives
          key: ${{ runner.os }}-${{ matrix.target }}-vcpkg-${{ hashFiles('**/vcpkg.json') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.target }}-vcpkg-

      - name: set up ccache for check
        if: ${{ matrix.target == 'check' }}
        uses: actions/cache@v4
        with:
          path: /github/home/.ccache
          key: ${{ runner.os }}-ccache-check-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-ccache-check-
            
      - name: Install dependencies
        run: |
          chmod +x ./get-dependencies.sh
          ./get-dependencies.sh
          
      - name: compile Citron ${{ matrix.target }}
        env:
          CCACHE_DIR: /github/home/.ccache
        run: |
          chmod +x ./citron-appimage.sh
          ./citron-appimage.sh ${{ matrix.target }}
          mkdir -p dist
          mv *.AppImage* dist/

      - name: Upload artifact
        uses: actions/upload-artifact@v4.6.1
        with:
          name: citron-${{ matrix.target}}-appimage
          path: "dist"

      - name: Check hash file
        run: |
          cat ~/hash
          echo "APP_VERSION=$(cat ~/version)" >> "${GITHUB_ENV}"

      - name: Upload hash file
        if: ${{ matrix.target == 'steamdeck' }}
        uses: actions/upload-artifact@v4.6.1
        with:
          name: hash
          path: ~/hash
          overwrite: true
  android: 
    runs-on: ubuntu-latest
    name: "Citron nightly (android)"
    env:
      CCACHE_DIR: ${{ github.workspace }}/.ccache
      CCACHE_COMPILERCHECK: content
      CCACHE_SLOPPINESS: time_macros
      OS: android
      TARGET: universal
    steps:
      - uses: actions/checkout@v4

      - name: Set up cache for android
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ${{ env.CCACHE_DIR }}
          key: ${{ runner.os }}-android-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-android-
      - name: Install dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install ccache apksigner unzip -y
          
      - name: Set up Android SDK
        run: |
          wget "https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip" -O cmdline-tools.zip
          mkdir -p $HOME/android-sdk/cmdline-tools
          unzip cmdline-tools.zip -d $HOME/android-sdk/cmdline-tools/
          mv $HOME/android-sdk/cmdline-tools/cmdline-tools $HOME/android-sdk/cmdline-tools/latest
          export ANDROID_HOME=$HOME/android-sdk
          export PATH=$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools:$PATH
          yes | sdkmanager --licenses
          sdkmanager --install "platform-tools" "platforms;android-35" "build-tools;35.0.0" "ndk;29.0.13113456" "cmake;3.31.6"   
          
      - name: compile Citron android
        run: |
          chmod +x ./citron-android.sh
          JAVA_HOME=$JAVA_HOME_17_X64 ./citron-android.sh
        env:
          ANDROID_KEYSTORE_B64: ${{ secrets.ANDROID_KEYSTORE_B64 }}
          ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
          ANDROID_KEYSTORE_PASS: ${{ secrets.ANDROID_KEYSTORE_PASS }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4.6.1
        with:
          name: ${{ env.OS }}-${{ env.TARGET }}
          path: src/android/app/artifacts/
          
  release:
    name: "release"
    if: ${{ github.ref_name == 'main' }}
    needs: [appimage, android]
    permissions:
      actions: read
      security-events: write
      contents: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4.1.9
        with:
          name: citron-steamdeck-appimage

      - uses: actions/download-artifact@v4.1.9
        with:
          name: citron-rog-appimage

      - uses: actions/download-artifact@v4.1.9
        with:
          name: citron-common-appimage

      - uses: actions/download-artifact@v4.1.9
        with:
          name: android-universal
          
      - uses: actions/download-artifact@v4.1.9
        with:
          name: hash
          
      - name: Read hash and Get date
        run: |
          export VERSION="$(cat hash)"
          echo "APP_VERSION=${VERSION}" >> "${GITHUB_ENV}"
          echo "date=$(date +'%Y-%m-%d')" >> "$GITHUB_ENV"

      - name: Delete same tag release
        run: |
          gh release delete "${{ env.date }}-${{ env.APP_VERSION }}" --repo "${GITHUB_REPOSITORY}" --cleanup-tag  -y
          sleep 5
        env:
          GH_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        continue-on-error: true

      - name: Build Releaser
        uses: softprops/action-gh-release@v2
        with:
          name: "Citron Nightly Release: ${{ env.APP_VERSION }}"
          tag_name: "${{ env.date }}-${{ env.APP_VERSION }}"
          prerelease: false
          draft: false
          generate_release_notes: false
          make_latest: true
          files: |
            *.AppImage*, *.apk
